<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FL Studio Mac版：让你的音乐制作更有趣</title>
      <link href="/2025/03/30/FL%20Studio%20Mac%E7%89%88%EF%BC%9A%E8%AE%A9%E4%BD%A0%E7%9A%84%E9%9F%B3%E4%B9%90%E5%88%B6%E4%BD%9C%E6%9B%B4%E6%9C%89%E8%B6%A3/"/>
      <url>/2025/03/30/FL%20Studio%20Mac%E7%89%88%EF%BC%9A%E8%AE%A9%E4%BD%A0%E7%9A%84%E9%9F%B3%E4%B9%90%E5%88%B6%E4%BD%9C%E6%9B%B4%E6%9C%89%E8%B6%A3/</url>
      
        <content type="html"><![CDATA[<p>如果你是一位 Mac 用户，又恰好对音乐制作充满兴趣，那么 FL Studio 的 Mac 版本可能正是你一直在找的那个软件。作为全球音乐制作人们的“必备神器”，FL Studio 不仅在 Windows 平台上大受欢迎，Mac 版本也在近几年得到了极大的优化和支持。</p><h2 id="为什么选择-FL-Studio-Mac-版？"><a href="#为什么选择-FL-Studio-Mac-版？" class="headerlink" title="为什么选择 FL Studio Mac 版？"></a>为什么选择 FL Studio Mac 版？</h2><p>首先，FL Studio Mac 版保留了 Windows 版本的所有经典功能。无论是炙手可热的音频插件，还是流畅的操作体验，它都能带给你完全不逊色于 Windows 版本的创作体验。而且，FL Studio 的界面非常直观，操作起来没有任何复杂的门槛，即使你是刚入门的新手，也能快速上手。</p><h3 id="丰富的音效和插件库，轻松激发创作灵感"><a href="#丰富的音效和插件库，轻松激发创作灵感" class="headerlink" title="丰富的音效和插件库，轻松激发创作灵感"></a>丰富的音效和插件库，轻松激发创作灵感</h3><p>FL Studio Mac 版不仅自带了一整套高质量的音效和虚拟乐器，还支持无限扩展，可以通过第三方插件来满足你对音色的各种需求。不管你是做 EDM、Trap、还是 Hip-Hop，总能找到合适的音效，助你轻松打造自己的音乐风格。</p><h3 id="MIDI-设备兼容性，一切都在掌控之中"><a href="#MIDI-设备兼容性，一切都在掌控之中" class="headerlink" title="MIDI 设备兼容性，一切都在掌控之中"></a>MIDI 设备兼容性，一切都在掌控之中</h3><p>FL Studio Mac 版对 MIDI 设备的支持非常强大。无论你是使用 MIDI 键盘、控制器，还是其他外部设备，FL Studio 都能与它们无缝对接，为你提供极致的操作自由度。对于音乐制作来说，MIDI 控制让你可以更加精确地调整每个音符和节奏，提升制作效率。</p><h3 id="性能强大，稳定流畅"><a href="#性能强大，稳定流畅" class="headerlink" title="性能强大，稳定流畅"></a>性能强大，稳定流畅</h3><p>作为一款专业级的音乐制作软件，FL Studio 的音频处理能力也是无可挑剔的。无论是多轨录音、实时编曲，还是复杂的混音工程，它都能高效运转，保证你在创作过程中不会出现任何卡顿或崩溃的情况。</p><h3 id="适合所有层次的音乐制作人"><a href="#适合所有层次的音乐制作人" class="headerlink" title="适合所有层次的音乐制作人"></a>适合所有层次的音乐制作人</h3><p>从初学者到职业制作人，FL Studio Mac 版都能提供全面的支持。它直观的操作界面和强大的功能组合，使得你可以专注于音乐创作本身，而无需担心软件的操作难度。即使你只是想做些简单的编曲，FL Studio 也能帮助你轻松实现。</p><h2 id="如何获取-FL-Studio-Mac-版？"><a href="#如何获取-FL-Studio-Mac-版？" class="headerlink" title="如何获取 FL Studio Mac 版？"></a>如何获取 FL Studio Mac 版？</h2><p>如果你对 FL Studio Mac 版感兴趣，可以访问<a href="https://www.image-line.com/">FL Studio 官方网站</a>下载并体验其完整功能。无论是想要试用基本版本，还是购买完整版，FL Studio 都提供了多种选择，满足不同用户的需求。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FL Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>突破次元壁！轻松上手 VPN 节点搭建</title>
      <link href="/2024/10/29/%E7%AA%81%E7%A0%B4%E6%AC%A1%E5%85%83%E5%A3%81%EF%BC%81%E8%BD%BB%E6%9D%BE%E4%B8%8A%E6%89%8B%20VPN%20%E8%8A%82%E7%82%B9%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/10/29/%E7%AA%81%E7%A0%B4%E6%AC%A1%E5%85%83%E5%A3%81%EF%BC%81%E8%BD%BB%E6%9D%BE%E4%B8%8A%E6%89%8B%20VPN%20%E8%8A%82%E7%82%B9%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>本教程仅用于<strong>技术学习</strong>和<strong>研究</strong>目的，作者<strong>不鼓励</strong>或<strong>支持</strong>任何形式的违法活动。请<strong>遵守</strong>您所在国家或地区的相关法律法规，不得利用本教程内容从事任何侵犯他人合法权益或破坏网络安全的行为。</p><p>使用 VPN 服务可能涉及访问受限制或监管的内容，用户应<strong>自行</strong>承担相应风险和责任。我们<strong>不对</strong>使用本教程后产生的任何后果负责。</p><h1 id="突破次元壁！轻松上手-VPN-节点搭建"><a href="#突破次元壁！轻松上手-VPN-节点搭建" class="headerlink" title="突破次元壁！轻松上手 VPN 节点搭建"></a>突破次元壁！轻松上手 VPN 节点搭建</h1><h2 id="步骤一：购买-VPS"><a href="#步骤一：购买-VPS" class="headerlink" title="步骤一：购买 VPS"></a>步骤一：购买 VPS</h2><p>个人推荐：<a href="https://my.racknerd.com/index.php?rp=/store/shared-hosting">RackNerd</a></p><table><thead><tr><th>内存</th><th>CPU</th><th>SSD</th><th>流量</th><th>价格</th><th>购买网址</th><th>备注</th></tr></thead><tbody><tr><td>1.0 G</td><td>1 核</td><td>17G</td><td>3T&#x2F;月</td><td>$10.98&#x2F;年</td><td><a href="https://my.racknerd.com/cart.php?a=confproduct&i=0">链接</a></td><td>最新特惠</td></tr></tbody></table><p><strong>服务器地址</strong><br>Chicago, IL(Test IP: 198.23.228.15)<br>Atlanta (Test 1P: 107.173.164.160)<br>NewYork（TestIP:192.3.81.8)<br>Dallas,TX(Test IP: 198.23.249.100)<br>Seattle(TestIP: 192.3.253.2)<br>San Jose, CA (Test IP: 192.210.207.88)<br>Strasbourg, France (Test IP: 45.95.173.2) $5.99 USD</p><p>可以根据服务器 ip 自己 ping 一下 看一下 ms 高不高</p><p><strong>测试工具</strong></p><p>打开网站 <a href="https://www.itdog.cn/ping/">IP 延迟速度 测试工具</a><br>输入 vps 的 ip 地址, 点击 “单次测试”<br>如果一片红色(正红色)就需要换 IP</p><p><strong>推荐位置</strong></p><p>San Jose 或 Seattle</p><hr><p>购买完成后，可以在服务商后台找到以下信息：</p><ul><li><strong>IP 地址</strong>：服务器 IP</li><li><strong>端口</strong>：服务器端口</li><li><strong>用户名</strong>：服务器用户名</li><li><strong>密码</strong>：服务器密码</li></ul><p>这些信息将在连接 VPS 时用到。</p><h2 id="步骤二：连接服务器"><a href="#步骤二：连接服务器" class="headerlink" title="步骤二：连接服务器"></a>步骤二：连接服务器</h2><p>您可以使用 FinalShell 或系统自带的终端工具来连接服务器。这里提供一些 FinalShell 的下载地址：</p><ul><li><strong>Windows 64 位</strong>：<a href="https://www.alipan.com/s/1UtHQUbPts6">点我下载</a></li><li><strong>macOS ARM 版</strong>（适用于 M1、M2、M3 芯片）：<a href="https://www.alipan.com/s/reoVV73HqmD">点我下载</a></li><li><strong>macOS X64 版</strong>（适用于旧款 Intel CPU）：<a href="https://www.alipan.com/s/TyXnsukRd3y">点我下载</a></li></ul><p>连接命令如下（替换为您 VPS 的信息）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@服务器ip -p 服务器端口</span><br></pre></td></tr></table></figure><p>当您看到提示 <code>[root@racknerd-67a80b3 ~]#</code>，表示连接成功。</p><h2 id="步骤三：安装-X-UI-管理面板"><a href="#步骤三：安装-X-UI-管理面板" class="headerlink" title="步骤三：安装 X-UI 管理面板"></a>步骤三：安装 X-UI 管理面板</h2><p>连接成功后，使用以下命令安装 X-UI：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/956bf85bbac978d56c0e319c5fac2d6db7df9564/install.sh) 0.3.4.4</span><br></pre></td></tr></table></figure><p>按照提示依次输入：</p><ol><li><code>y</code></li><li>自定义用户名</li><li>自定义密码</li><li>选择一个小于 60000 的已放行端口</li></ol><p>安装完成后，在浏览器中访问 <code>服务器IP地址:自定义端口</code>，打开 X-UI 管理界面。输入您设置的用户名和密码进行登录。</p><h2 id="步骤四：配置-VPN-节点"><a href="#步骤四：配置-VPN-节点" class="headerlink" title="步骤四：配置 VPN 节点"></a>步骤四：配置 VPN 节点</h2><h3 id="方法一：Vmess-WS-节点"><a href="#方法一：Vmess-WS-节点" class="headerlink" title="方法一：Vmess + WS 节点"></a>方法一：Vmess + WS 节点</h3><ol><li>在 X-UI 管理界面中打开“入站列表”。</li><li>选择“添加入站”，并设置以下选项：<ul><li><strong>备注</strong>：vmess+ws</li><li><strong>协议</strong>：选择 vmess</li></ul></li><li>添加用户后，将网络设置为 <strong>ws</strong>。</li><li>复制 <code>user id</code> 中的一段粘贴到路径字段中。</li><li>点击“添加”完成配置。</li></ol><p>至此，Vmess + WS 节点已配置完成。</p><h3 id="方法二：Vless-Vision-Reality-节点"><a href="#方法二：Vless-Vision-Reality-节点" class="headerlink" title="方法二：Vless + Vision + Reality 节点"></a>方法二：Vless + Vision + Reality 节点</h3><ol><li>在“入站列表”中选择“添加入站”，并配置以下选项：<ul><li><strong>备注</strong>：vless+vision+reality</li><li><strong>端口</strong>：443</li></ul></li><li>添加用户后，开启 <strong>reality</strong>。</li><li>将 <code>flow</code> 设置为 <code>xtls-rprx-vision</code>。</li><li>目标网站设置为 <code>1.1.1.1:443</code>。</li><li>复制 <code>user id</code> 的前一部分，粘贴到“可选域名”中，并在末尾加上 <code>.com</code>。</li><li>点击“添加”完成配置。</li></ol><p>至此，Vless + Vision + Reality 节点也已配置完成。</p><h2 id="步骤五：检测端口状态"><a href="#步骤五：检测端口状态" class="headerlink" title="步骤五：检测端口状态"></a>步骤五：检测端口状态</h2><p>为了确保端口未被封锁，可以访问以下地址进行检测：</p><ul><li><a href="https://tcp.ping.pe/ip:%E7%AB%AF%E5%8F%A3">https://tcp.ping.pe/ip:端口</a></li></ul><hr><p>以上就是 VPN 节点搭建的详细步骤，希望对您有所帮助。</p>]]></content>
      
      
      <categories>
          
          <category> 开发笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用使用Google Email发送邮件</title>
      <link href="/2024/10/29/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google-Email%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
      <url>/2024/10/29/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Google-Email%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在本教程中，我们将详细讲解如何通过 Google Email（Gmail）向外发送邮件，包括如何进行 SMTP 配置、生成 App 密码以及一些常见问题的解决方法。适合初学者快速上手。</p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><strong>确保启用两步验证</strong>：为了确保账户的安全，Google 要求启用两步验证才能使用 SMTP 发送邮件。</li><li><strong>申请 App 专用密码</strong>：由于常规的 Google 密码无法直接用于 SMTP 配置，需申请一个专门的 App 密码。</li></ol><hr><h2 id="步骤一：启用两步验证"><a href="#步骤一：启用两步验证" class="headerlink" title="步骤一：启用两步验证"></a>步骤一：启用两步验证</h2><ol><li>登录你的 Gmail 账号。</li><li>点击右上角的头像，进入“<strong>管理您的 Google 账户</strong>”。</li><li>在左侧找到“<strong>安全</strong>”选项卡。</li><li>在“两步验证”选项中，点击“<strong>启用</strong>”，并按照提示完成设置。</li></ol><hr><h2 id="步骤二：生成-App-密码"><a href="#步骤二：生成-App-密码" class="headerlink" title="步骤二：生成 App 密码"></a>步骤二：生成 App 密码</h2><ol><li>返回“<strong>安全</strong>”页面，找到“<strong>App 密码</strong>”。</li><li>输入 Google 账户的登录密码以验证身份。</li><li>在“选择应用程序”下拉列表中选择“<strong>邮件</strong>”，设备类型选择“<strong>其他</strong>”，可以自定义一个名字（例如：SMTP）。</li><li>点击“<strong>生成</strong>”按钮，系统会为你生成一个 16 位的 App 专用密码。<strong>保存此密码</strong>，稍后会在配置 SMTP 时用到。</li></ol><hr><h2 id="步骤三：配置-SMTP-信息"><a href="#步骤三：配置-SMTP-信息" class="headerlink" title="步骤三：配置 SMTP 信息"></a>步骤三：配置 SMTP 信息</h2><p>使用 Gmail SMTP 发送邮件需要以下信息：</p><ul><li><strong>SMTP 服务器</strong>：smtp.gmail.com</li><li><strong>端口号</strong>：587（TLS）或 465（SSL）</li><li><strong>SSL&#x2F;TLS 加密</strong>：是</li><li><strong>用户名</strong>：你的 Gmail 邮箱地址</li><li><strong>密码</strong>：上一步生成的 App 密码</li></ul><p>在代码中可以这样配置（假设使用的是 Node.js）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> nodemailer = <span class="built_in">require</span>(<span class="string">&quot;nodemailer&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> transporter = nodemailer.<span class="title function_">createTransport</span>(&#123;</span><br><span class="line">  <span class="attr">host</span>: <span class="string">&quot;smtp.gmail.com&quot;</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="number">587</span>, <span class="comment">// 使用TLS</span></span><br><span class="line">  <span class="attr">secure</span>: <span class="literal">false</span>, <span class="comment">// true for 465, false for other ports</span></span><br><span class="line">  <span class="attr">auth</span>: &#123;</span><br><span class="line">    <span class="attr">user</span>: <span class="string">&quot;your-email@gmail.com&quot;</span>, <span class="comment">// 你的Gmail地址</span></span><br><span class="line">    <span class="attr">pass</span>: <span class="string">&quot;your-app-password&quot;</span>, <span class="comment">// 上一步生成的App密码</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送邮件</span></span><br><span class="line"><span class="keyword">const</span> mailOptions = &#123;</span><br><span class="line">  <span class="attr">from</span>: <span class="string">&quot;your-email@gmail.com&quot;</span>,</span><br><span class="line">  <span class="attr">to</span>: <span class="string">&quot;recipient@example.com&quot;</span>,</span><br><span class="line">  <span class="attr">subject</span>: <span class="string">&quot;Hello from Gmail&quot;</span>,</span><br><span class="line">  <span class="attr">text</span>: <span class="string">&quot;This is a test email sent from a Node.js app using Gmail SMTP.&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">transporter.<span class="title function_">sendMail</span>(mailOptions, <span class="function">(<span class="params">error, info</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (error) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;邮件发送成功: %s&quot;</span>, info.<span class="property">messageId</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google Email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南</title>
      <link href="/2024/10/26/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9AHexo-GitHub-Pages-Cloudflare-Pages-%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/"/>
      <url>/2024/10/26/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9AHexo-GitHub-Pages-Cloudflare-Pages-%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="快速搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages-完整指南"><a href="#快速搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages-完整指南" class="headerlink" title="快速搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南"></a>快速搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>个人博客不仅是展示自己技术能力的平台，还可以用于记录学习心得和分享内容。Hexo + GitHub Pages + Cloudflare Pages 的组合是一种简单、高效的静态博客搭建方式，适合新手快速上手。本文将逐步带您完成安装和配置。</p><hr><h2 id="第一步：安装开发环境"><a href="#第一步：安装开发环境" class="headerlink" title="第一步：安装开发环境"></a>第一步：安装开发环境</h2><p>在正式开始之前，需要安装一些必要的软件，包括 <strong>Node.js</strong>、<strong>Git</strong> 和 <strong>Hexo</strong>。如果您从未接触过这些技术，请按照以下详细步骤来安装。</p><h3 id="1-1-安装-Node-js"><a href="#1-1-安装-Node-js" class="headerlink" title="1.1 安装 Node.js"></a>1.1 安装 Node.js</h3><p><strong>Node.js</strong> 是一个运行 JavaScript 代码的平台，Hexo 的很多操作依赖它。</p><ol><li>打开 <a href="https://nodejs.org/">Node.js 官网</a>。</li><li>点击“下载”按钮，选择适合自己电脑操作系统的版本。</li><li>下载完成后，双击安装文件，按照提示完成安装（默认选项即可）。</li><li>安装完成后，打开命令行工具：<ul><li>Windows：按 <code>Win + R</code> 输入 <code>cmd</code> 并回车。</li><li>Mac：按 <code>Command + Space</code> 输入 <code>Terminal</code> 并回车。</li></ul></li><li>输入以下命令，检查安装是否成功：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>正确输出版本号（例如 <code>v16.13.0</code>）表示 Node.js 安装成功。</li></ol><h3 id="1-2-安装-Git"><a href="#1-2-安装-Git" class="headerlink" title="1.2 安装 Git"></a>1.2 安装 Git</h3><p><strong>Git</strong> 是一个版本控制工具，之后我们会用它把博客部署到 GitHub 上。</p><ol><li>打开 <a href="https://git-scm.com/">Git 官网</a>。</li><li>点击“Download”，选择适合自己操作系统的版本。</li><li>下载后双击安装文件，安装时可以保留默认设置（Windows 用户在安装时勾选“Use Git from the Windows Command Prompt”）。</li><li>安装完成后，打开命令行工具，输入以下命令检查安装是否成功：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>正确输出版本号（例如 <code>git version 2.34.1</code>）表示 Git 安装成功。</li></ol><hr><h2 id="第二步：创建-GitHub-仓库"><a href="#第二步：创建-GitHub-仓库" class="headerlink" title="第二步：创建 GitHub 仓库"></a>第二步：创建 GitHub 仓库</h2><p>我们需要一个 GitHub 仓库来托管生成的博客内容。请确保您已注册并登录 <a href="https://github.com/">GitHub</a>。</p><ol><li>打开 GitHub 网站，点击右上角的“+”号图标，选择“New repository”。</li><li><strong>Repository name</strong> 中输入 <code>&#123;username&#125;.github.io</code>，将 <code>&#123;username&#125;</code> 替换为您的 GitHub 用户名（比如 <code>johndoe.github.io</code>）。</li><li>选择“Public”（公开仓库），<strong>勾选</strong> “Add a README file”。</li><li>点击“Create repository”完成创建。</li></ol><!-- > **截图提示**：在 GitHub 上创建 `{username}.github.io` 仓库的页面。 --><hr><h2 id="第三步：安装并配置-Hexo"><a href="#第三步：安装并配置-Hexo" class="headerlink" title="第三步：安装并配置 Hexo"></a>第三步：安装并配置 Hexo</h2><h3 id="3-1-安装-Hexo"><a href="#3-1-安装-Hexo" class="headerlink" title="3.1 安装 Hexo"></a>3.1 安装 Hexo</h3><ol><li>在命令行中，输入以下命令安装 Hexo：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><code>-g</code> 选项表示全局安装，成功后可以在任何目录下使用 <code>hexo</code> 命令。</li></ol><h3 id="3-2-初始化-Hexo-项目"><a href="#3-2-初始化-Hexo-项目" class="headerlink" title="3.2 初始化 Hexo 项目"></a>3.2 初始化 Hexo 项目</h3><ol><li><p>在您计算机上新建一个文件夹用于存放博客文件，您可以右键新建一个文件夹，命名为 <code>my-blog</code>。</p></li><li><p>打开命令行，将当前路径切换到该文件夹（使用 <code>cd</code> 命令）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> your_folder_path/my-blog</span><br></pre></td></tr></table></figure><p>将 <code>your_folder_path</code> 替换为您文件夹所在路径。</p></li><li><p>运行以下命令初始化 Hexo 项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>完成后，该文件夹内会生成 Hexo 的配置文件和目录结构。</p></li></ol><h3 id="3-3-启动本地服务器查看博客效果"><a href="#3-3-启动本地服务器查看博客效果" class="headerlink" title="3.3 启动本地服务器查看博客效果"></a>3.3 启动本地服务器查看博客效果</h3><ol><li>在命令行中运行以下命令，启动本地 Hexo 服务器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></li><li>在浏览器中打开 <a href="http://localhost:4000/">http://localhost:4000</a> 即可预览博客效果。</li></ol>  <!-- > **截图提示**：浏览器中 `http://localhost:4000` 的博客首页。 --><hr><h2 id="第四步：配置-GitHub-Pages-部署"><a href="#第四步：配置-GitHub-Pages-部署" class="headerlink" title="第四步：配置 GitHub Pages 部署"></a>第四步：配置 GitHub Pages 部署</h2><h3 id="4-1-安装-GitHub-部署工具"><a href="#4-1-安装-GitHub-部署工具" class="headerlink" title="4.1 安装 GitHub 部署工具"></a>4.1 安装 GitHub 部署工具</h3><ol><li>在 <code>my-blog</code> 文件夹中，运行以下命令安装 Hexo 部署插件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li></ol><h3 id="4-2-配置-Hexo-部署设置"><a href="#4-2-配置-Hexo-部署设置" class="headerlink" title="4.2 配置 Hexo 部署设置"></a>4.2 配置 Hexo 部署设置</h3><ol><li>打开 <code>my-blog</code> 文件夹下的 <code>_config.yml</code> 文件。</li><li>找到 <code>deploy</code> 选项，按如下方式填写您的 GitHub 仓库信息：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&#123;username&#125;/&#123;username&#125;.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>将 <code>&#123;username&#125;</code> 替换为您的 GitHub 用户名。</li></ol><h3 id="4-3-部署到-GitHub-Pages"><a href="#4-3-部署到-GitHub-Pages" class="headerlink" title="4.3 部署到 GitHub Pages"></a>4.3 部署到 GitHub Pages</h3><ol><li><p>每次修改内容后，您可以通过以下命令将博客部署到 GitHub Pages 上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>部署完成后，打开 <code>https://&#123;username&#125;.github.io</code> 查看博客上线效果。</p><!-- > **截图提示**：成功部署后，访问 `{username}.github.io` 的页面截图。 --></li></ol><hr><h2 id="第五步：接入-Cloudflare-Pages-提升访问速度"><a href="#第五步：接入-Cloudflare-Pages-提升访问速度" class="headerlink" title="第五步：接入 Cloudflare Pages 提升访问速度"></a>第五步：接入 Cloudflare Pages 提升访问速度</h2><h3 id="5-1-注册-Cloudflare-并创建-Pages-项目"><a href="#5-1-注册-Cloudflare-并创建-Pages-项目" class="headerlink" title="5.1 注册 Cloudflare 并创建 Pages 项目"></a>5.1 注册 Cloudflare 并创建 Pages 项目</h3><ol><li>前往 <a href="https://www.cloudflare.com/">Cloudflare 官网</a>，注册并登录。</li><li>登录后，选择页面顶部的“Pages”选项并创建一个新项目。</li><li>点击“Connect to GitHub”，选择 <code>&#123;username&#125;.github.io</code> 仓库并关联。</li></ol><h3 id="5-2-设置构建和发布配置"><a href="#5-2-设置构建和发布配置" class="headerlink" title="5.2 设置构建和发布配置"></a>5.2 设置构建和发布配置</h3><ol><li><p><strong>Framework Preset</strong>：选择 <code>Hexo</code></p></li><li><p><strong>Build Command</strong>：填写 <code>hexo generate</code></p></li><li><p><strong>Output Directory</strong>：填写 <code>public</code></p></li><li><p>完成后，Cloudflare Pages 会自动构建并部署项目，为您生成一个新的博客访问链接，并为网站提供全球 CDN 加速。</p><!-- > **截图提示**：Cloudflare Pages 项目设置和成功部署的页面截图。 --></li></ol><hr><h2 id="第六步：优化与进阶配置"><a href="#第六步：优化与进阶配置" class="headerlink" title="第六步：优化与进阶配置"></a>第六步：优化与进阶配置</h2><ul><li><strong>添加自定义域名</strong>：如果您有自定义域名，可以在 Cloudflare 设置中添加，并在域名设置中指向 Cloudflare 提供的 <code>CNAME</code> 地址。</li><li><strong>SEO 优化</strong>：在 <code>_config.yml</code> 文件中配置博客标题、描述和关键字，有助于搜索引擎更好地抓取您的内容。</li></ul><hr><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p><strong>主题我推荐使用：安知鱼，安知鱼是一个简洁、美丽的静态 hexo 主题（本网站已应用安知鱼主题 体验感超棒！！！😄）</strong></p><p><strong>-项目地址：<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">https://github.com/anzhiyu-c/hexo-theme-anzhiyu</a></strong><br><strong>-官方文档：<a href="https://docs.anheyu.com/initall.html">https://docs.anheyu.com/initall.html</a></strong></p><p>以上是 Hexo + GitHub Pages + Cloudflare Pages 的详细搭建流程，即便是完全新手也能快速上手并完成个人博客的搭建。希望本教程对您有所帮助，祝您的博客越做越精彩！</p><hr>]]></content>
      
      
      <categories>
          
          <category> 开发笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
